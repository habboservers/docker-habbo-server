name: Test - Build Docker image

on:
  workflow_run:
    workflows: ['Test - Create Version']
    types:
      - completed
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Get version tag
        if: github.event_name == 'workflow_run'
        id: get_tag
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.name,
              run_id: context.payload.workflow_run.id
            });

            const tagArtifact = artifacts.data.artifacts.find(artifact => artifact.name === 'tag');
            if (!tagArtifact) {
              throw new Error('No tag artifact found from previous workflow');
            }

            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.name,
              artifact_id: tagArtifact.id,
              archive_format: 'zip'
            });

            const fs = require('fs');
            fs.writeFileSync('tag.zip', Buffer.from(download.data));

            require('child_process').execSync('unzip tag.zip');
            const tag = fs.readFileSync('tag.txt', 'utf8').trim();
            core.setOutput('tag', tag);

      - name: Process version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${{ steps.get_tag.outputs.tag }}"
          fi
          
          VERSION="${TAG#v}"  # Remove 'v' prefix
          VERSION="${VERSION}-test"  # Add -test suffix
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Selected tag: $TAG"
          echo "Processed version: $VERSION"

      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.version.outputs.tag }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GHCR
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: vitorvasc/docker-habbo-server
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}

      - name: Build and push Docker image
        id: push_release
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
